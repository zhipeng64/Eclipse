name: Build docker image
on:
  push:
    branches:
      - main
      - zhipeng64-workflow
    # Filter to only trigger the workflow when below files
    # are changed
    paths:
      - "docker/**"
      - "docker-compose.yml"
      - ".github/workflows/docker-image.yml"
      - "src/backend/**"
      - "src/frontend/**"
      - "package.json"
      - "package-lock.json"

env:
  AWS_REGION: us-east-1
  BACKEND_IMAGE: eclipse-backend:v1.0
  NGINX_IMAGE: eclipse-nginx:stable-perl

jobs:
  build:
    runs-on: ubuntu-latest

    # For AWS OIDC
    # https://github.com/aws-actions/configure-aws-credentials?tab=readme-ov-file#oidc-configuration
    # Specifies the ONLY permissions granted to the GITHUB_TOKEN for the job
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository where docker-compose.yml is located
        uses: actions/checkout@v4

      - name: Creates secrets directory
        run: mkdir certs

      - name: List files in repo
        run: |
          echo "Showing current directory:"
          pwd
          echo "Listing files:"
          ls -R

      - name: Configure AWS credentials (uses OIDC for authentication + authorization for AWS)
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Docker Compose environment variables
        run: |
          echo "${{ secrets.SSL_CERT_PEM }}" > certs/Eclipse_SSL_cert.pem
          echo "${{ secrets.SSL_KEY_PEM }}" > certs/Eclipse_dev_private-key.pem

      - name: Run the docker-compose command to build images
        run: docker compose build

      - name: Push backend image to Amazon Elastic Container Registry (ECR)
        uses: jwalton/gh-ecr-push@v2
        with:
          region: ${{ env.AWS_REGION }}
          local-image: ${{ env.BACKEND_IMAGE }}
          image: ${{ secrets.ECR_CONTAINER_REGISTRY }}:backend-v1.0

      - name: Push nginx image to ECR
        uses: jwalton/gh-ecr-push@v2
        with:
          region: ${{ env.AWS_REGION }}
          local-image: ${{ env.NGINX_IMAGE }}
          image: ${{ secrets.ECR_CONTAINER_REGISTRY }}:nginx-v1.0
